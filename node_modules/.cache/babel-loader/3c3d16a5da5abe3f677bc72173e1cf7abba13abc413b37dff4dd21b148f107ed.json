{"ast":null,"code":"const isReactNative = typeof navigator > \"u\" ? !1 : navigator.product === \"ReactNative\",\n  defaultOptions = {\n    timeout: isReactNative ? 6e4 : 12e4\n  },\n  processOptions = function (opts) {\n    const options = {\n      ...defaultOptions,\n      ...(typeof opts == \"string\" ? {\n        url: opts\n      } : opts)\n    };\n    if (options.timeout = normalizeTimeout(options.timeout), options.query) {\n      const {\n        url,\n        searchParams\n      } = splitUrl(options.url);\n      for (const [key, value] of Object.entries(options.query)) {\n        if (value !== void 0) if (Array.isArray(value)) for (const v of value) searchParams.append(key, v);else searchParams.append(key, value);\n        const search = searchParams.toString();\n        search && (options.url = `${url}?${search}`);\n      }\n    }\n    return options.method = options.body && !options.method ? \"POST\" : (options.method || \"GET\").toUpperCase(), options;\n  };\nfunction splitUrl(url) {\n  const qIndex = url.indexOf(\"?\");\n  if (qIndex === -1) return {\n    url,\n    searchParams: new URLSearchParams()\n  };\n  const base = url.slice(0, qIndex),\n    qs = url.slice(qIndex + 1),\n    searchParams = new URLSearchParams(qs);\n  if (typeof searchParams.size == \"number\") return {\n    url: base,\n    searchParams\n  };\n  if (typeof decodeURIComponent != \"function\") throw new Error(\"Broken `URLSearchParams` implementation, and `decodeURIComponent` is not defined\");\n  const params = new URLSearchParams();\n  for (const pair of qs.split(\"&\")) {\n    const [key, value] = pair.split(\"=\");\n    key && params.append(decodeURIComponent(key), decodeURIComponent(value || \"\"));\n  }\n  return {\n    url: base,\n    searchParams: params\n  };\n}\nfunction normalizeTimeout(time) {\n  if (time === !1 || time === 0) return !1;\n  if (time.connect || time.socket) return time;\n  const delay = Number(time);\n  return isNaN(delay) ? normalizeTimeout(defaultOptions.timeout) : {\n    connect: delay,\n    socket: delay\n  };\n}\nconst validUrl = /^https?:\\/\\//i,\n  validateOptions = function (options) {\n    if (!validUrl.test(options.url)) throw new Error(`\"${options.url}\" is not a valid URL`);\n  };\nexport { processOptions as p, validateOptions as v };","map":{"version":3,"names":["isReactNative","navigator","product","defaultOptions","timeout","processOptions","opts","options","url","normalizeTimeout","query","searchParams","splitUrl","key","value","Object","entries","Array","isArray","v","append","search","toString","method","body","toUpperCase","qIndex","indexOf","URLSearchParams","base","slice","qs","size","decodeURIComponent","Error","params","pair","split","time","connect","socket","delay","Number","isNaN","validUrl","validateOptions","test"],"sources":["/Users/donkeydesktop/Desktop/MERN COURSE/Personal projects/puffy project/BusyBee/node_modules/get-it/src/middleware/defaultOptionsProcessor.ts","/Users/donkeydesktop/Desktop/MERN COURSE/Personal projects/puffy project/BusyBee/node_modules/get-it/src/middleware/defaultOptionsValidator.ts"],"sourcesContent":["import type {MiddlewareHooks, RequestOptions} from '../types'\n\nconst isReactNative = typeof navigator === 'undefined' ? false : navigator.product === 'ReactNative'\n\nconst defaultOptions = {timeout: isReactNative ? 60000 : 120000} satisfies Partial<RequestOptions>\n\n/** @public */\nexport const processOptions = function processOptions(opts) {\n  const options = {\n    ...defaultOptions,\n    ...(typeof opts === 'string' ? {url: opts} : opts),\n  } satisfies RequestOptions\n\n  // Normalize timeouts\n  options.timeout = normalizeTimeout(options.timeout)\n\n  // Shallow-merge (override) existing query params\n  if (options.query) {\n    const {url, searchParams} = splitUrl(options.url)\n\n    for (const [key, value] of Object.entries(options.query)) {\n      if (value !== undefined) {\n        if (Array.isArray(value)) {\n          for (const v of value) {\n            searchParams.append(key, v as string)\n          }\n        } else {\n          searchParams.append(key, value as string)\n        }\n      }\n\n      // Merge back params into url\n      const search = searchParams.toString()\n      if (search) {\n        options.url = `${url}?${search}`\n      }\n    }\n  }\n\n  // Implicit POST if we have not specified a method but have a body\n  options.method =\n    options.body && !options.method ? 'POST' : (options.method || 'GET').toUpperCase()\n\n  return options\n} satisfies MiddlewareHooks['processOptions']\n\n/**\n * Given a string URL, extracts the query string and URL from each other, and returns them.\n * Note that we cannot use the `URL` constructor because of old React Native versions which are\n * majorly broken and returns incorrect results:\n *\n * (`new URL('http://foo/?a=b').toString()` == 'http://foo/?a=b/')\n */\nfunction splitUrl(url: string): {url: string; searchParams: URLSearchParams} {\n  const qIndex = url.indexOf('?')\n  if (qIndex === -1) {\n    return {url, searchParams: new URLSearchParams()}\n  }\n\n  const base = url.slice(0, qIndex)\n  const qs = url.slice(qIndex + 1)\n  const searchParams = new URLSearchParams(qs)\n\n  // Buggy React Native versions do not implement `size`, so if we have one,\n  // we should be able to use a functioning `URLSearchParams` implementation\n  if (typeof searchParams.size === 'number') {\n    return {url: base, searchParams}\n  }\n\n  // Sanity-check; we do not know of any environment where this is the case,\n  // but if it is, we should not proceed without giving a descriptive error\n  if (typeof decodeURIComponent !== 'function') {\n    throw new Error(\n      'Broken `URLSearchParams` implementation, and `decodeURIComponent` is not defined',\n    )\n  }\n\n  // Another brokenness in React Native: `URLSearchParams` does not accept a string argument,\n  // so we'll have do attempt to destructure the query string ourselves :(\n  const params = new URLSearchParams()\n  for (const pair of qs.split('&')) {\n    const [key, value] = pair.split('=')\n    if (key) {\n      params.append(decodeURIComponent(key), decodeURIComponent(value || ''))\n    }\n  }\n\n  return {url: base, searchParams: params}\n}\n\nfunction normalizeTimeout(time: RequestOptions['timeout']) {\n  if (time === false || time === 0) {\n    return false\n  }\n\n  if (time.connect || time.socket) {\n    return time\n  }\n\n  const delay = Number(time)\n  if (isNaN(delay)) {\n    return normalizeTimeout(defaultOptions.timeout)\n  }\n\n  return {connect: delay, socket: delay}\n}\n","import type {MiddlewareHooks} from '../types'\n\nconst validUrl = /^https?:\\/\\//i\n\n/** @public */\nexport const validateOptions = function validateOptions(options) {\n  if (!validUrl.test(options.url)) {\n    throw new Error(`\"${options.url}\" is not a valid URL`)\n  }\n} satisfies MiddlewareHooks['validateOptions']\n"],"mappings":"AAEA,MAAMA,aAAA,GAAgB,OAAOC,SAAA,GAAc,MAAc,KAAQA,SAAA,CAAUC,OAAA,KAAY;EAEjFC,cAAA,GAAiB;IAACC,OAAA,EAASJ,aAAA,GAAgB,MAAQ;EAAM;EAGlDK,cAAA,GAAiB,SAAAA,CAAwBC,IAAA,EAAM;IAC1D,MAAMC,OAAA,GAAU;MACd,GAAGJ,cAAA;MACH,IAAI,OAAOG,IAAA,IAAS,WAAW;QAACE,GAAA,EAAKF;MAAQ,IAAAA,IAAA;IAAA;IAO/C,IAHAC,OAAA,CAAQH,OAAA,GAAUK,gBAAA,CAAiBF,OAAA,CAAQH,OAAO,GAG9CG,OAAA,CAAQG,KAAA,EAAO;MACjB,MAAM;QAACF,GAAA;QAAKG;MAAA,IAAgBC,QAAA,CAASL,OAAA,CAAQC,GAAG;MAErC,YAACK,GAAA,EAAKC,KAAK,KAAKC,MAAA,CAAOC,OAAA,CAAQT,OAAA,CAAQG,KAAK,GAAG;QACxD,IAAII,KAAA,KAAU,QACR,IAAAG,KAAA,CAAMC,OAAA,CAAQJ,KAAK,GACrB,WAAWK,CAAA,IAAKL,KAAA,EACDH,YAAA,CAAAS,MAAA,CAAOP,GAAA,EAAKM,CAAW,OAGzBR,YAAA,CAAAS,MAAA,CAAOP,GAAA,EAAKC,KAAe;QAKtC,MAAAO,MAAA,GAASV,YAAA,CAAaW,QAAA;QACxBD,MAAA,KACFd,OAAA,CAAQC,GAAA,GAAM,GAAGA,GAAG,IAAIa,MAAM;MAElC;IACF;IAGQ,OAAAd,OAAA,CAAAgB,MAAA,GACNhB,OAAA,CAAQiB,IAAA,IAAQ,CAACjB,OAAA,CAAQgB,MAAA,GAAS,UAAUhB,OAAA,CAAQgB,MAAA,IAAU,OAAOE,WAAA,IAEhElB,OAAA;EACT;AASA,SAASK,SAASJ,GAAA,EAA2D;EACrE,MAAAkB,MAAA,GAASlB,GAAA,CAAImB,OAAA,CAAQ,GAAG;EAC9B,IAAID,MAAA,KAAW,IACb,OAAO;IAAClB,GAAA;IAAKG,YAAA,EAAc,IAAIiB,eAAA,CAAiB;EAAA;EAGlD,MAAMC,IAAA,GAAOrB,GAAA,CAAIsB,KAAA,CAAM,GAAGJ,MAAM;IAC1BK,EAAA,GAAKvB,GAAA,CAAIsB,KAAA,CAAMJ,MAAA,GAAS,CAAC;IACzBf,YAAA,GAAe,IAAIiB,eAAA,CAAgBG,EAAE;EAIvC,WAAOpB,YAAA,CAAaqB,IAAA,IAAS,UACxB;IAACxB,GAAA,EAAKqB,IAAA;IAAMlB;EAAA;EAKrB,IAAI,OAAOsB,kBAAA,IAAuB,YAChC,MAAM,IAAIC,KAAA,CACR;EAME,MAAAC,MAAA,GAAS,IAAIP,eAAA;EACnB,WAAWQ,IAAA,IAAQL,EAAA,CAAGM,KAAA,CAAM,GAAG,GAAG;IAChC,MAAM,CAACxB,GAAA,EAAKC,KAAK,IAAIsB,IAAA,CAAKC,KAAA,CAAM,GAAG;IAC/BxB,GAAA,IACFsB,MAAA,CAAOf,MAAA,CAAOa,kBAAA,CAAmBpB,GAAG,GAAGoB,kBAAA,CAAmBnB,KAAA,IAAS,EAAE,CAAC;EAE1E;EAEA,OAAO;IAACN,GAAA,EAAKqB,IAAA;IAAMlB,YAAA,EAAcwB;EAAM;AACzC;AAEA,SAAS1B,iBAAiB6B,IAAA,EAAiC;EACrD,IAAAA,IAAA,KAAS,MAASA,IAAA,KAAS,GACtB;EAGL,IAAAA,IAAA,CAAKC,OAAA,IAAWD,IAAA,CAAKE,MAAA,EAChB,OAAAF,IAAA;EAGH,MAAAG,KAAA,GAAQC,MAAA,CAAOJ,IAAI;EACrB,OAAAK,KAAA,CAAMF,KAAK,IACNhC,gBAAA,CAAiBN,cAAA,CAAeC,OAAO,IAGzC;IAACmC,OAAA,EAASE,KAAA;IAAOD,MAAA,EAAQC;EAAK;AACvC;ACvGA,MAAMG,QAAA,GAAW;EAGJC,eAAA,GAAkB,SAAAA,CAAyBtC,OAAA,EAAS;IAC/D,IAAI,CAACqC,QAAA,CAASE,IAAA,CAAKvC,OAAA,CAAQC,GAAG,GAC5B,MAAM,IAAI0B,KAAA,CAAM,IAAI3B,OAAA,CAAQC,GAAG,sBAAsB;EAEzD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}